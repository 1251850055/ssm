1. 实用类
Java API java应用程序编程接口，它是运行库的集合，
	它里面预先定义一些接口和类。
	程序员可以直接使用这些被打包的接口和类来做具体的应用。
	也称"帮助文档"

java.lang：编写java程序  应用最广泛的包，自动导入到
	所有程序中，包含了java程序的基础类和接口。
	包装类，Math类、String类等常用类都在此包中
java.util：包含了系统辅助类，比如：
	Collection\list\map等集合
java.io：包含了输入/输出有关的类，如：文件操作等
java.net：包含了与网络有关的类，
	如：Socket,ServerSocket等类
java.sql: 包含了与数据库相关的类，
	如：Connection,Statement等类
	
	
枚举：
	枚举是由一组固定的常量组成的类型，使用关键字enum定义
	枚举其实就是一种类型。

1.Math 类提供了一些基本的数学运算和集合运算的方法

2.String 类 位于java.lang 包中，默认情况下自动导入程序中的
	 1 .length()
	 2 .equals
	 3.equalsIgnoreCase
	 4.startsWith
	 5.endsWith
	 6.toLowerCase
	 7.toUpperCase
	 8.substring
	 9.lastIndexOf
	 10.indexOf
	 11.concat
	 12.split
-----------------------------------------------
1.StringBuffer类：
  StringBuffer类 也是java提供的用于处理字符串的一个类，
  	它比String类 更高效的存储字符串
  	StringBuffer 上主要操作的append和insert方法，
  	  可以重载这些方法，以接受任意类型的数据。
  	  toString();
  	每个方法都能有效的将给定的数据转换成字符串，然后
  		将该字符串添加或插入到字符串缓冲区中。
  append方法始终将这些字符添加到缓冲区的末端，
  insert则在指定的点添加字符。
  
  	 * StringBuffer与String的区别：
	 * Stirng  concat 后面只能追加 字符串
	 * StringBuffer   append 后面可以追加任意类型
 
 
 String:字符串常量
 	String 是不可变的对象，每次对String类型进行改变的时候
 		其实等同于生成一个新的字符串对象，然后指向新的String
 			对象。所以，经常改变字符串内容 最好不要用String,
 				因为每次生成对象都会对系统性能产生影响
 StringBuffer: 字符串变量
 	 StringBuffer是可变的字符串，在每次对StringBuffer对象
 	 	进行改变时，会对其本身进行操作，而不是生成新的对象。
 	例： 字符串连接操作，StringBuffer类的效率比String高。
 StringBuilder: 字符串变量
 	 StringBuffer是线程安全的，
 	 StringBuilder 是单线程的
 ----------------------------------------------

2.日期：
 	java.util 包中提供了关于日期的类有：
 		Date类、Calendar类、SimpleDateFormat类等
 	
 	 Date类使用最多的是获取当前的日期和时间
 	 Date date = new Date();
 	 使用系统时间创建日期对象
 	 
 	 Calendar类用来操作日期和时间的类.
 	 提供了一组方法，允许把一个以毫秒为单位的时间转换
 	 	成年、月、日、时、分、秒。
 	 	可以把它当作是万年历
 	 Calendar 抽象类，可以通过静态方法 getInstance()
 	 	获得Calendar对象，其实这个获得的对象是它的子类
 	 		的对象。
 	 		
 	 SimpleDateFormat： 格式化日期时间的类。它在
 	 	java.text包下，提供了格式化和解析时间的方法。
 	
 Calendar.month+1的原因：
 	java中遵循罗马历的规则：当时一年中的月份数量不固定，
 		第一个是 JANUARY。  定义下标为0  依次往后推
 	
 Calendar.DAY_OF_WEEK-1的原因：
 	  它表示的是一周中的第几天，所以它会受到第一天是星期几的影响
 	  	有些地区以星期日作为一周的第一天，
 	  	有些地区以星期一作为一周的第一天。






作业：
  用键盘输入 一个文件名，然后再输入一个邮箱
  如果文件名 是以.java 为后缀名的 ，
  并且判断 邮箱 中存在 @ 和 . ， @ 在. 前面
  
  如果都满足这么多条件！   
  那么 你做的这个java作业 才能提交成功！
  
  例：
  	请输入java源文件：
  		xx.txt
  	请输入邮箱：
  		xxx@126.com
  	输入： 您的这个作业不符合规则  提交失败
  	
  	请输入java源文件：
  		xx.java
  	请输入邮箱：
  		xxx@126.com
  	输入： 您的这个作业符合规则  提交成功！


	