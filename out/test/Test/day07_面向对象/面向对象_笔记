//1.面向对象  
//	(Object) 对象; 相当于现实中我们所说的“东西”
//	他指的是一个具体事物的实例。
//	比如： 飞机大炮，水杯，风扇，运气，想象力
//总之，一切事物皆对象。



//2.	概念：类型（类）；指的是一个名词概念（Emp员工 ，Person） 
//	
//	
//this 关键字：
//	1.this相当于对象的引用，运行期间指的是本身
//	2.可以使用this 明确访问当前对象的属性和方法。
//
//构造方法(构造器)
//1.构造方法必须声明在类的内部
//2.方法名与类名一样的方法 就叫做构造方法
//3.构造方法不能声明 返回值类型   (不能加 int )
//4.构造方法可以包含参数
// 无参的构造方法 默认存在
//	
//方法的重载;
//	1.在同一个类中
//	2.方法名相同
//	3.参数的个数或者类型不同
//	
////  String name;    默认修饰符
//	private int age;  属性私有化
//	protected String sex;   在当前包里可用
//	
//访问权限
//	作用域 					同一个类中				同一个包中				其他地方
//修饰符		
//private						可以							不可以使用			不可以使用
//默认修饰符					可以							可以						不可以使用
//protected					可以							可以						不可以使用
//	public						可以							可以						可以

//封装
//在Java中，封装的实质就是讲类的状态信息隐藏在类的内部，不允许外部的程序
//直接访问，但是可以通过该类的提供的方法来实现对隐藏信息的操作和访问。

//私有化对象的属性，对外提供set，get方法
//
//static:
//	静态的
// 	1.使用static修饰的属性，属于类的内部属性
// 	2.静态的属性是在类加载期间初始化的
// 	
// 	在Java中，一般调用类的成员的时候，要先创建类的对象，
// 	然后，通过对象进行调用，使用Static关键字可以实现
// 	通过类名"."的方式，直接条用类的成员，不需要创建类的对象了。
// 	
// 	static{  静态代码块   
//		加载当前类的时候，直接执行的部分}

